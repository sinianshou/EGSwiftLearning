//
//  DataBuilder.swift
//  EGSwiftLearning
//
//  Created by Easer Liu on 2019/10/17.
//  Copyright Â© 2019 Easer. All rights reserved.
//

import UIKit

class DataBuilder: NSObject {
    class func cryptopangramsData() -> [String:Any]{
//        the result should be SUBDERMATOGLYPHICFJKNQVWXZ
        return [
            "N":10000,
            "L":25,
            "ARR":[3292937,175597,18779,50429,375469,1651121,2102,3722,2376497,611683,489059,2328901,3150061,829981,421301,76409,38477,291931,730241,959821,1664197,3057407,4267589,4729181,5335543]
        ];
    }
    class func ValidNumberData() -> [String]{
//        "0" => true
//        " 0.1 " => true
//        "abc" => false
//        "1 a" => false
//        "2e10" => true
//        " -90e3   " => true
//        " 1e" => false
//        "e3" => false
//        " 6e-1" => true
//        " 99e2.5 " => false
//        "53.5e93" => true
//        " --6 " => false
//        "-+3" => false
//        "95a54e53" => false
        return [
            "0", "0.1", "abc", "1 a", "2e10", "-90e3", " 1e", "e3", " 6e-1", " 99e2.5", "53.5e93", " --6", "-+3", "95a54e53", "  6", "6.6e6.6", "6.6.6", "6.6e6.6.6", "6e6e", " ", "  ", "1 ", ".1", "1.", "3. ", " .3", "4e+", "+.8", ".-4", "46.e3"
        ]
    }
    
    class func OnceInTripleData() -> [Int]{
        //        expected is 4
        return [1, 1, 1, 2, 2, 4, 2, 3, 3, 3]
    }
    
    class func maxPointOnLineData() -> [[[Int]]]{
        //        expected is Output: 4 3 3 25 2
        return [
            [[1,1],[3,2],[5,3],[4,1],[2,3],[1,4]],
            [[1,1],[1,1],[1,1]],
            [[-4,1],[-7,7],[-1,5],[9,-25]],
            [[40,-23],[9,138],[429,115],[50,-17],[-3,80],[-10,33],[5,-21],[-3,80],[-6,-65],[-18,26],[-6,-65],[5,72],[0,77],[-9,86],[10,-2],[-8,85],[21,130],[18,-6],[-18,26],[-1,-15],[10,-2],[8,69],[-4,63],[0,3],[-4,40],[-7,84],[-8,7],[30,154],[16,-5],[6,90],[18,-6],[5,77],[-4,77],[7,-13],[-1,-45],[16,-5],[-9,86],[-16,11],[-7,84],[1,76],[3,77],[10,67],[1,-37],[-10,-81],[4,-11],[-20,13],[-10,77],[6,-17],[-27,2],[-10,-81],[10,-1],[-9,1],[-8,43],[2,2],[2,-21],[3,82],[8,-1],[10,-1],[-9,1],[-12,42],[16,-5],[-5,-61],[20,-7],[9,-35],[10,6],[12,106],[5,-21],[-5,82],[6,71],[-15,34],[-10,87],[-14,-12],[12,106],[-5,82],[-46,-45],[-4,63],[16,-5],[4,1],[-3,-53],[0,-17],[9,98],[-18,26],[-9,86],[2,77],[-2,-49],[1,76],[-3,-38],[-8,7],[-17,-37],[5,72],[10,-37],[-4,-57],[-3,-53],[3,74],[-3,-11],[-8,7],[1,88],[-12,42],[1,-37],[2,77],[-6,77],[5,72],[-4,-57],[-18,-33],[-12,42],[-9,86],[2,77],[-8,77],[-3,77],[9,-42],[16,41],[-29,-37],[0,-41],[-21,18],[-27,-34],[0,77],[3,74],[-7,-69],[-21,18],[27,146],[-20,13],[21,130],[-6,-65],[14,-4],[0,3],[9,-5],[6,-29],[-2,73],[-1,-15],[1,76],[-4,77],[6,-29]],
            [[0,0],[94911151,94911150],[94911152,94911151]],
        ]
    }
}
